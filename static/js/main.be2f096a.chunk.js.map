{"version":3,"sources":["components/SIR.jsx","App.jsx","serviceWorker.js","index.js","components/Img/corona.png"],"names":["Wrapper","styled","div","Corona","Title","Discription","DateBlock","Input","input","Button","HiddenBlock","Greeting","ResultBlock","firstSentence","secondSentence","thirdSentence","randomIndex","Math","floor","random","SIR","useState","dateStr","setDate","sign","setSign","showPage","setShowPage","type","name","onChange","e","target","value","onFocus","onClick","date","Date","dayMonth","Number","format","dayNumber","console","log","alert","getSign","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.be2f096a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {format} from 'date-fns';\r\nimport Corona from './Img/corona.png';\r\n\r\nconst Wrapper = styled.div `\r\npadding: 15px;\r\nmax-width: 1400px;\r\nmargin: 0 auto;\r\nmin-height: 100vh;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nposition: relative;\r\nborder: 6px double yellow;\r\n\r\n&:after {\r\n    content: '';\r\n    background-size: contain;\r\n    background-image: url(${Corona});\r\n    opacity: 0.3;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index:-1;\r\n}\r\n\r\n`;\r\n\r\nconst Title = styled.div `\r\ndisplay: flex;\r\njustify-content: center;\r\nfont-size: 60px;\r\nmargin-bottom: 15px;\r\nfont-weight: 700;\r\ncolor: yellow;\r\ntext-shadow: black 3px 3px 1px;\r\ntext-align: center;\r\n\r\n`;\r\n\r\nconst Discription = styled.div `\r\nmargin-bottom: 15px;\r\npadding: 10px;\r\ndisplay: flex;\r\njustify-content: center;\r\nfont-size: 40px;\r\ntext-align: center;\r\nfont-weight: 600;\r\n`;\r\n\r\nconst DateBlock = styled.div `\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\n`;\r\n\r\nconst Input = styled.input `\r\n    width: 260px;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    border: 1px solid black;\r\n    text-align: center;\r\n\r\n    &:focus {\r\n        outline-color: yellow;\r\n    }\r\n`;\r\n\r\nconst Button = styled.div `\r\n    height: 38px;\r\n    width: 100px;\r\n    font-size: 26px;\r\n    text-align: center;\r\n    border: 3px solid black;\r\n    border-radius: 12px;\r\n    margin-left: 15px;\r\n    padding: 0 5px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        background: rgba(255, 255, 0, 0.7);\r\n    }\r\n`;\r\n\r\nconst HiddenBlock = styled.div `\r\nmargin: 15px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nconst Greeting = styled.div `\r\ndisplay:flex;\r\njustify-content:center;\r\nfont-size: 50px;\r\nmargin-bottom: 5px;\r\nfont-weight: 700;\r\ncolor: yellow;\r\ntext-shadow: black 3px 3px 1px;\r\n`;\r\n\r\nconst ResultBlock = styled.div `\r\nfont-size: 40px;\r\npadding: 10px;\r\ndisplay:flex;\r\njustify-content:center;\r\ntext-align: center;\r\nfont-weight: 500;\r\n`;\r\n\r\nconst firstSentence = [\r\n    'Сегодня отличный день, чтобы выучить наизусть путь Кровать-Холодильник-Кровать.',\r\n    'Если вы ждали знака от Вселенной, чтобы наконец взяться за проект, который давно откладывали - это он!',\r\n    'Идеальное время для того, чтобы разобрать все старые вещи и хорошенько убраться дома.',\r\n    'Это лучший день для того, чтобы весь день играть в видеоигры и не испытывать чувства вины.',\r\n    'Звезды говорят: сегодня лучший день для просмотра сериалов нон-стоп.',\r\n    'Спорт - вот ключ к сегодняшнему спокойствию.',\r\n    'Время задуматься о том, что карантин пройдет, а отношение останется.',\r\n    'Сегодняшний день лучше всего провести в постели с любимым человеком.'\r\n];\r\n\r\nconst secondSentence = ['Но поберегите свою спину.',\r\n'Не увлекайтесь печеньками и газированными напитками - аукнется...',\r\n'Пейте больше воды и избегайте сильно соленой пищи.',\r\n 'Не забывайте давать отдых глазам.',\r\n 'Устройте диджитал-детокс - никаких соцсетей, тревожных новостей и мемов.',\r\n 'Даже не думайте о пикниках, лучше позвоните друзьям в Скайп.',\r\n 'Проверьте своих островитян в Animal Crossing, потрубим?',\r\n 'Но помните - чем больше вы едите, тем больше нужно двигаться.',\r\n\r\n];\r\n\r\nconst thirdSentence = [\r\n'И оставайтесь дома.',\r\n'А дома всегда лучше.',\r\n'Будьте ответственными и оставайтесь дома.',\r\n'А постить фотки #stayhome нужно из дома.',\r\n'Потерпите еще немного, скоро обязательно можно будет пойти погулять.',\r\n'Все мы скучаем по родным и близким, но пока мы все дома, так безопаснее.',\r\n'Карантин закончится, а отношение останется.',\r\n'Закажите вкусной еды и оставайтесь дома.'\r\n]\r\n\r\nconst randomIndex = () => {\r\n    return Math.floor(Math.random() * Math.floor(8));\r\n}\r\n\r\nexport const SIR = () => {\r\n    const [dateStr, setDate] = useState(\"\");\r\n    const [sign, setSign] = useState('');\r\n    const [showPage, setShowPage] = useState(false);\r\n    const getSign = () => {\r\n        const date = new Date(dateStr);\r\n        const dayMonth = Number(format(date, 'MM'));\r\n        const dayNumber = Number(format(date, 'dd'))\r\n        \r\n        if((dayNumber>=21 && dayMonth===3) || (dayNumber<=20 && dayMonth===4)) {\r\n                setSign('Дорогой Овнишка')\r\n        }\r\n        else if ((dayNumber>=21 && dayMonth===4) || (dayNumber<=20 && dayMonth===5)) {\r\n            console.log(dayMonth)\r\n            setSign('Дорогой Телец-молодец')\r\n        }\r\n        else if ((dayNumber>=21 && dayMonth===5) || (dayNumber<=20 && dayMonth===6)) {\r\n            setSign('Дорогой Близняшка')\r\n        }\r\n        else if ((dayNumber>=21 && dayMonth===6) || (dayNumber<=22 && dayMonth===7)) {\r\n            setSign('Дорогой Рак')\r\n        }\r\n        else if ((dayNumber>=23 && dayMonth===7) || (dayNumber<=22 && dayMonth===8)) {\r\n            setSign('Дорогой Львёнок')\r\n        }\r\n        else  if ((dayNumber>=23 && dayMonth===8) || (dayNumber<=22 && dayMonth===9)) {\r\n            setSign('Дорогая Дева')\r\n        }\r\n        else if ((dayNumber>=23 && dayMonth===9) || (dayNumber<=22 && dayMonth===10)) {\r\n            setSign('Дорогие Весы')\r\n        }\r\n        else if ((dayNumber>=23 && dayMonth===10) || (dayNumber<=22 && dayMonth===11)) {\r\n            setSign('Дорогой Скорпиончик')\r\n        }\r\n        else if ((dayNumber>=23 && dayMonth===11) || (dayNumber<=21 && dayMonth===12)) {\r\n            setSign('Дорогой Срелец-удалец')\r\n        }\r\n        else if ((dayNumber>=22 && dayMonth===12) || (dayNumber<=19 && dayMonth===1)) {\r\n            setSign('Дорогой Козерожка')\r\n        }\r\n        else if ((dayNumber>=20 && dayMonth===1) || (dayNumber<=19 && dayMonth===2)) {\r\n            setSign('Дорогой Водолей')\r\n        }\r\n        else if ((dayNumber>=20 && dayMonth===2) || (dayNumber<=20 && dayMonth===3)) {\r\n            setSign('Дорогие Рыбки')\r\n        }\r\n        else {\r\n            alert('Попробуй еще...')\r\n        }\r\n\r\n        setDate('')\r\n        setShowPage(true);\r\n\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Title>Твой личный короновирусный гороскопчик</Title>\r\n            <Discription>В тяжелые вирусные времена как никогда нужна уверенность в своем будущем..Как быть? Введи дату своего рождения и все станет ясно как день!</Discription>\r\n            <DateBlock>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                onChange={e => setDate(e.target.value)}\r\n                value={dateStr}\r\n                onFocus={() => setShowPage(false)}\r\n            />\r\n            <Button type=\"button\" onClick={() => getSign()}>Узнать!</Button>\r\n            </DateBlock>\r\n            {sign && showPage ? (\r\n                <HiddenBlock>\r\n                <Greeting>{sign}!</Greeting>\r\n            <ResultBlock>{firstSentence[randomIndex()]} {secondSentence[randomIndex()]} {thirdSentence[randomIndex()]}</ResultBlock>\r\n                </HiddenBlock>\r\n            ) : null}\r\n            \r\n            \r\n            </Wrapper>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {SIR} from './components/SIR';\n\nconst App = () => {\n  return (\n    <SIR/>\n     \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/corona.5cbaece6.png\";"],"sourceRoot":""}